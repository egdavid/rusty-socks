# Rusty Socks WebSocket Server Configuration
# Copy this to .env and configure with your values

# Basic server configuration
# SECURITY NOTE: Default host binds to localhost only for security
# Set to 0.0.0.0 only if you need external access and have proper security measures
RUSTY_SOCKS_HOST=127.0.0.1
RUSTY_SOCKS_PORT=3030
RUSTY_SOCKS_MAX_CONN=100
RUSTY_SOCKS_BUFFER=1024

# Connection parameters
RUSTY_SOCKS_TIMEOUT=60
RUSTY_SOCKS_PING=30

# Thread pool configuration
RUSTY_SOCKS_THREAD_POOL_SIZE=4
RUSTY_SOCKS_MAX_QUEUED_TASKS=1000

# Authentication and Security Configuration
# CRITICAL: Generate separate secure random secrets for production!
# Example: openssl rand -base64 32

# JWT secret for token signing/validation (REQUIRED)
RUSTY_SOCKS_JWT_SECRET=generate_secure_jwt_secret_min_32_characters

# CSRF secret for CSRF token generation/validation (REQUIRED, MUST be different from JWT secret)
RUSTY_SOCKS_CSRF_SECRET=generate_different_csrf_secret_min_32_characters

# Rate limiting configuration
RUSTY_SOCKS_MAX_CONN_PER_IP=10
RUSTY_SOCKS_RATE_LIMIT_MSG_PER_MIN=60

# TLS Configuration (Required for production)
RUSTY_SOCKS_ENABLE_TLS=false
# RUSTY_SOCKS_TLS_CERT_PATH=/path/to/certificate.pem
# RUSTY_SOCKS_TLS_KEY_PATH=/path/to/private_key.pem

# Development/Production Mode
# Set to "production" for production deployment
RUST_ENV=development

# Logging Configuration
# Set to "debug" for detailed logs, "info" for normal operation
RUST_LOG=info

# Security Options
RUSTY_SOCKS_ALLOW_ANONYMOUS=false
RUSTY_SOCKS_DEV_MODE=false

# Database/Storage (if implementing persistence)
# DATABASE_URL=postgres://user:password@localhost/rusty_socks

# Monitoring (for future implementation)
# PROMETHEUS_METRICS_PORT=9090
# GRAFANA_DASHBOARD_URL=http://localhost:3000